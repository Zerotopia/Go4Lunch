version: 2.1
jobs:
  test:
    working_directory: ~/AndroidStudio/Go4Lunch
    docker:
      - image: circleci/android:api-29  # gcloud is baked into this image
    steps:
      - checkout
      - run:
          name: Create Service
          context: Test
          command: echo $GOOGLE_SERVICE > app/google-services.json
      - run:
          name: Build debug APK and release APK
          command: |
            chmod +x ./gradlew
            ./gradlew :app:assembleDebug
            ./gradlew :app:assembleDebugAndroidTest
      - run:
          name: Store Google Service Account
          context: Test
          command: echo $GCLOUD_SERVICE_KEY > ${HOME}/gcloud-service-key.json
      - run:
          name: Authorize gcloud and set config defaults
          context: Test
          command: |
            sudo gcloud auth activate-service-account --key-file=${HOME}/gcloud-service-key.json
            sudo gcloud --quiet config set project ${GOOGLE_PROJECT_ID}
      - run:
          name: Test with Firebase Test Lab
          command: sudo gcloud firebase test android run argument.yml:argTest
#          \ 
#              --app app/build/outputs/apk/debug/app-debug.apk \ 
#              --test app/build/outputs/apk/androidTest/debug/app-debug-androidTest.apk
#              --results-bucket cloud-test-${GOOGLE_PROJECT_ID}
#     - run:
#         name: Install gsutil dependency and copy test results data
#         command: |
#           sudo pip install -U crcmod
#           sudo gsutil -m cp -r -U `sudo gsutil ls gs://[BUCKET_NAME]/[OBJECT_NAME] | tail -1` ${CIRCLE_ARTIFACTS}/ | true
  build:
    working_directory: ~/AndroidStudio/Go4Lunch
    docker:
      - image: circleci/android:api-29
    steps:
      - checkout
      - restore_cache:
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
      - run:
         name: Create Service
         context: Test
         command: |
            echo $GOOGLE_SERVICE > app/google-services.json
            cat app/google-services.json
      - run:
          name: Download Dependencies
          command: |
            chmod +x ./gradlew
            ./gradlew androidDependencies
      - save_cache:
          paths:
            - ~/.gradle
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
      - run:
          name: Run Tests
          command: |
            cat app/google-services.json
            ./gradlew lint test      
      - store_artifacts: # for display in Artifacts: https://circleci.com/docs/2.0/artifacts/ 
          path: app/build/reports
          destination: reports
      - store_test_results: # for display in Test Summary: https://circleci.com/docs/2.0/collect-test-data/
          path: app/build/test-results
      # See https://circleci.com/docs/2.0/deployment-integrations/ for deploy examples
      
workflows:
  version: 2
  build_and_test:
    jobs:
      - build
      - test
# abc
